--- guix-install.sh	2023-03-22 21:16:56.000000000 +0700
+++ guix-install.sh.patched	2023-03-22 08:27:05.184102082 +0700
@@ -121,9 +121,7 @@
 # answering "yes".
 # $1: The prompt question.
 prompt_yes_no() {
-    local -l yn
-    read -rp "$1 [Y/n]" yn
-    [[ ! $yn || $yn = y || $yn = yes ]] || return 1
+    return 0
 }
 
 chk_require()
@@ -295,21 +293,11 @@
     _debug "--- [ ${FUNCNAME[0]} ] ---"
 
     # Filter only version and architecture
-    bin_ver_ls=("$(wget "$gnu_url" --no-verbose -O- \
-        | sed -n -e 's/.*guix-binary-\([0-9.]*[a-z0-9]*\)\..*.tar.xz.*/\1/p' \
-        | sort -Vu)")
-
-    latest_ver="$(echo "${bin_ver_ls[0]}" \
-                       | grep -oE "([0-9]{1,2}\.){2}[0-9]{1,2}[a-z0-9]*" \
-                       | tail -n1)"
+    latest_ver="1.4.0"
 
     default_ver="guix-binary-${latest_ver}.${ARCH_OS}"
 
-    if [[ "${#bin_ver_ls}" -ne "0" ]]; then
-        _msg "${PAS}Release for your system: ${default_ver}"
-    else
-        die "Could not obtain list of Guix releases."
-    fi
+    _msg "${PAS}Release for your system: ${default_ver}"
 
     # Use default to download according to the list and local ARCH_OS.
     BIN_VER="${default_ver}"
@@ -627,18 +615,6 @@
 
 https://www.gnu.org/software/guix/
 EOF
-    # Don't use ‘read -p’ here!  It won't display when run non-interactively.
-    echo -n "Press return to continue..."$'\r'
-    if ! read -r char; then
-	echo
-	die "Can't read standard input.  Hint: don't pipe scripts into a shell."
-    fi
-    if [ "$char" ]; then
-	echo
-	echo "...that ($char) was not a return!"
-	_msg "${WAR}Use newlines to automate installation, e.g.: yes '' | ${0##*/}"
-	_msg "${WAR}Any other method is unsupported and likely to break in future."
-    fi
 }
 
 main()
